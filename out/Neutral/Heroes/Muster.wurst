package Muster
	import Group2
	import Player2

	constant integer SPELL_ID = 'A03B'
	constant real MANA = 100.0
	integer array COUNTER
	// The unit IDs
	integer array CORSAIR
	integer array GENTLEMAN
	integer array MUSULMAN
	integer array BLUSTER
	integer array STITCHER
	
	init
		CreateTrigger()
			..registerAnyUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT)
			..addCondition(Condition(function condition))
			..addAction(function actions)
		CORSAIR[0] = 'n00A'
		CORSAIR[1] = 'n014'
		CORSAIR[2] = 'n018'
		GENTLEMAN[0] = 'n00B'
		GENTLEMAN[1] = 'n015'
		GENTLEMAN[2] = 'n019'
		MUSULMAN[0] = 'n00C'
		MUSULMAN[1] = 'n01A'
		MUSULMAN[2] = 'n016'
		BLUSTER[0] = 'n009'
		BLUSTER[1] = 'n017'
		BLUSTER[2] = 'n013'
		STITCHER[0] = 'n011'
		STITCHER[1] = 'n01B'
		STITCHER[2] = 'n012'
			
	function condition() returns boolean
		return GetSpellAbilityId() == SPELL_ID
		
	function actions()
		let caster = GetTriggerUnit()
		let owner = caster.getOwner()
		var level = caster.getAbilityLevel(SPELL_ID)
		// Count current crew
		var counter = 0
		group allUnits = GetUnitsOfPlayerAll(owner)
		group crew = CreateGroup()
		for unit u in allUnits
			for int i = 0 to 2
				let ut = u.getTypeId()
				if ut == CORSAIR[i] or ut == GENTLEMAN[i] or ut == MUSULMAN[i] or ut == BLUSTER[i] or ut == STITCHER[i]
					counter++
					crew.addUnit(u)
		allUnits.destr()
		// Create new unique
		if crew.getSize() >= level
			caster.removeAbility(SPELL_ID)
			caster.addAbility(SPELL_ID)
			caster.setAbilityLevel(SPELL_ID, level)
			caster.addMana(MANA)
			caster.getOwner().simulateError("You have summoned the maximum number of crewmates")
		else
			level--
			while true
				int newT
				let r = GetRandomInt(0, 4)
				if r == 0
					newT = CORSAIR[level]
				else if r == 1
					newT = GENTLEMAN[level]
				else if r == 2
					newT = MUSULMAN[level]
				else if r == 3
					newT = BLUSTER[level]
				else if r == 4
					newT = STITCHER[level]
				else
					error("Muster")
					return
				var skipp = false
				for unit u in crew
					if u.getTypeId() == newT
						skipp = true
				if not skipp
					let newU = createUnit(owner, newT, caster.getPos(), caster.getFacingAngle())
					newU.setTimedLife(0.0)
					break
	

	
