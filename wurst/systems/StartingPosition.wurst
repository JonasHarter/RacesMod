package StartingPosition
	import Location2

	public enum Races
		Human
		Orc
		NightElf
		Undead
		Goblin
		Demon
		Naga

	public function createStartingUnits(player p, Races r)
		let unitSpacing = 64.00
		let defaultAngle = bj_UNIT_FACING.asAngleDegrees()
		let startPos = p.getStartLocation()
		let startLoc = Location(startPos.x, startPos.y)
		let nearestMine = MeleeFindNearestMine(startLoc, bj_MELEE_MINE_SEARCH_RADIUS)
		startLoc.remove()
		if(r == Races.Human)
			createUnit(p, 'htow', startPos, defaultAngle)
			let nearLoc = meleeGetProjectedVec(nearestMine.getPos(), startPos, 320)
			createUnit(p, 'hpea', vec2(nearLoc.x + 0.00 * unitSpacing, nearLoc.y + 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'hpea', vec2(nearLoc.x + 1.00 * unitSpacing, nearLoc.y + 0.15 * unitSpacing), defaultAngle)
			createUnit(p, 'hpea', vec2(nearLoc.x - 1.00 * unitSpacing, nearLoc.y + 0.15 * unitSpacing), defaultAngle)
			createUnit(p, 'hpea', vec2(nearLoc.x + 0.60 * unitSpacing, nearLoc.y - 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'hpea', vec2(nearLoc.x - 0.60 * unitSpacing, nearLoc.y - 1.00 * unitSpacing), defaultAngle)
		else if(r == Races.Orc)
			createUnit(p, 'ogre', startPos, defaultAngle)
			let nearLoc = meleeGetProjectedVec(nearestMine.getPos(), startPos, 320)
			createUnit(p, 'opeo', vec2(nearLoc.x + 0.00 * unitSpacing, nearLoc.y + 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'opeo', vec2(nearLoc.x + 1.00 * unitSpacing, nearLoc.y + 0.15 * unitSpacing), defaultAngle)
			createUnit(p, 'opeo', vec2(nearLoc.x - 1.00 * unitSpacing, nearLoc.y + 0.15 * unitSpacing), defaultAngle)
			createUnit(p, 'opeo', vec2(nearLoc.x + 0.60 * unitSpacing, nearLoc.y - 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'opeo', vec2(nearLoc.x - 0.60 * unitSpacing, nearLoc.y - 1.00 * unitSpacing), defaultAngle)
		else if(r == Races.NightElf)
			let townHallLoc = meleeGetProjectedVec(nearestMine.getPos(), startPos, 3.50 * bj_CELLWIDTH)
			let townHall = createUnit(p, 'etol', townHallLoc, defaultAngle)
			IssueTargetOrder(townHall, "entangleinstant", nearestMine)
			let nearLoc = meleeGetProjectedVec(nearestMine.getPos(), startPos, 320)
			createUnit(p, 'ewsp', vec2(nearLoc.x + 0.00 * unitSpacing, nearLoc.y + 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'ewsp', vec2(nearLoc.x + 1.00 * unitSpacing, nearLoc.y + 0.15 * unitSpacing), defaultAngle)
			createUnit(p, 'ewsp', vec2(nearLoc.x - 1.00 * unitSpacing, nearLoc.y + 0.15 * unitSpacing), defaultAngle)
			createUnit(p, 'ewsp', vec2(nearLoc.x + 0.60 * unitSpacing, nearLoc.y - 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'ewsp', vec2(nearLoc.x - 0.60 * unitSpacing, nearLoc.y - 1.00 * unitSpacing), defaultAngle)
		else if(r == Races.Undead)
			createUnit(p, 'unpl', startPos, defaultAngle)
			BlightGoldMineForPlayerBJ(nearestMine, p)
			let nearLoc = meleeGetProjectedVec(startPos, nearestMine.getPos(), 288)
			createUnit(p, 'ugho', vec2(nearLoc.x, nearLoc.y), defaultAngle)
			let nearLoc2 = meleeGetProjectedVec(nearestMine.getPos(), startPos, 320)
			createUnit(p, 'uaco', vec2(nearLoc2.x + 0.00 * unitSpacing, nearLoc2.y + 0.50 * unitSpacing), defaultAngle)
			createUnit(p, 'uaco', vec2(nearLoc2.x + 0.65 * unitSpacing, nearLoc2.y - 0.50 * unitSpacing), defaultAngle)
			createUnit(p, 'uaco', vec2(nearLoc2.x - 0.65 * unitSpacing, nearLoc2.y - 0.50 * unitSpacing), defaultAngle)
			location loc = Location(nearLoc2.x, nearLoc2.y)
			SetBlightLoc(p, loc, 768, true)
			loc.remove()
		else if(r == Races.Goblin)
			createUnit(p, 'h000', startPos, defaultAngle)
			let nearLoc = meleeGetProjectedVec(nearestMine.getPos(), startPos, 320)
			createUnit(p, 'h003', vec2(nearLoc.x + 0.00 * unitSpacing, nearLoc.y + 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'h003', vec2(nearLoc.x + 1.00 * unitSpacing, nearLoc.y + 0.15 * unitSpacing), defaultAngle)
			createUnit(p, 'h003', vec2(nearLoc.x - 1.00 * unitSpacing, nearLoc.y + 0.15 * unitSpacing), defaultAngle)
			createUnit(p, 'h003', vec2(nearLoc.x + 0.60 * unitSpacing, nearLoc.y - 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'h003', vec2(nearLoc.x - 0.60 * unitSpacing, nearLoc.y - 1.00 * unitSpacing), defaultAngle)
		else if(r == Races.Naga)
			createUnit(p, 'n00J', startPos, defaultAngle)
			let nearLoc = meleeGetProjectedVec(nearestMine.getPos(), startPos, 320)
			createUnit(p, 'n00R', vec2(nearLoc.x + 0.00 * unitSpacing, nearLoc.y + 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'n00P', vec2(nearLoc.x + 1.00 * unitSpacing, nearLoc.y + 0.15 * unitSpacing), defaultAngle)
			createUnit(p, 'n00P', vec2(nearLoc.x - 1.00 * unitSpacing, nearLoc.y + 0.15 * unitSpacing), defaultAngle)
			createUnit(p, 'n00P', vec2(nearLoc.x + 0.60 * unitSpacing, nearLoc.y - 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'n00P', vec2(nearLoc.x - 0.60 * unitSpacing, nearLoc.y - 1.00 * unitSpacing), defaultAngle)
		else if(r == Races.Demon)
			createUnit(p, 'u005', startPos, defaultAngle)
			let nearLoc = meleeGetProjectedVec(nearestMine.getPos(), startPos, 320)
			createUnit(p, 'u006', vec2(nearLoc.x, nearLoc.y), defaultAngle)
			let nearLoc2 = meleeGetProjectedVec(startPos, nearestMine.getPos(), 288)
			createUnit(p, 'o00H', vec2(nearLoc2.x + 1.00 * unitSpacing, nearLoc2.y + 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'o00H', vec2(nearLoc2.x - 1.00 * unitSpacing, nearLoc2.y - 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'o00H', vec2(nearLoc2.x + 1.00 * unitSpacing, nearLoc2.y - 1.00 * unitSpacing), defaultAngle)
			createUnit(p, 'o00H', vec2(nearLoc2.x - 1.00 * unitSpacing, nearLoc2.y + 1.00 * unitSpacing), defaultAngle)
			location loc = Location(nearLoc2.x, nearLoc2.y)
			SetBlightLoc(p, loc, 768, true)
			loc.remove()
			

	function meleeGetProjectedVec(vec2 src, vec2 targ, real distance)returns vec2
		var v = targ - src
		v = v.norm() * distance
		return src + v