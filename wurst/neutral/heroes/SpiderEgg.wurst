package SpiderEgg
	import UnitTypeWatcher
	import UnitObjEditing
	import ObjectIdGenerator
	import UnitIndexer
	
	constant integer ABILITY_EGG_ID = 'A017'
	constant integer UNIT_BASE_ID = 'nnwa'
	constant integer UNIT_EGG_ID = 'o009'
	public constant integer UNIT_SPIDER_ID = compiletime(UNIT_ID_GEN.next())
	real array eggLastHp

	@compiletime function genSpider()
		new UnitDefinition(UNIT_SPIDER_ID ,UNIT_BASE_ID)
			..setName("Nerubian Ripper")
			..setModelFile("neutral/NerubianRipper.mdx")
			..setAttack1DamageNumberofDice(4)
			..setArmorType(ArmorType.Medium)
			..setDisplayasNeutralHostile(false)
			..setFoodCost(0)
			..setSleeps(false)
			..setTooltipExtended("Medium melee unit that hatches from an egg. |n|n|cffffcc00Attacks land units.|r")
			..setNormalAbilities("")
			..setAttack1AnimationDamagePoint(.75)

	init
		new EggLastHpWatcher(UNIT_EGG_ID)
		CreateTrigger()
			..registerAnyUnitEvent(EVENT_PLAYER_UNIT_SUMMON)
			..addAction(function summon)
		CreateTrigger()
			..registerAnyUnitEvent(EVENT_PLAYER_UNIT_DEATH)
			..addAction(function hatchAction)

	function summon()
		unit summoned = GetSummonedUnit()
		if summoned.getTypeId() != UNIT_EGG_ID
			return
		int level = GetSummoningUnit().getAbilityLevel(ABILITY_EGG_ID)
		summoned.setMaxHP(level * 100)
		summoned.setHP(summoned.getMaxHP())
		
	function hatchAction()
		let u = GetDyingUnit()
		if GetKillingUnit() != null or u.getTypeId() != UNIT_EGG_ID
			return
		let owner = u.getOwner()
		let pos = u.getPos()
		let a = u.getFacingAngle()
		int level = (u.getMaxHP() / 100).toInt()
		let x = createUnit(owner, UNIT_SPIDER_ID, pos, a)
		x.setMaxHP(300 + 200 * level)
		x.setBaseDamage(15 + 6 * level, 1)
		x.setTimedLife(60.0)
		x.setHP(x.getMaxHP() * (eggLastHp[u.getIndex()] / u.getMaxHP()))

	class EggLastHpWatcher extends UnitTypeWatcher

		construct(integer unitType)
			super(unitType)

		override function updateUnit(unit u)
			if u.isAlive()
				eggLastHp[u.getIndex()] = u.getHP()