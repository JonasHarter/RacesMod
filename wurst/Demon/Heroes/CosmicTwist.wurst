package CosmicTwist
	import Location2
	import PowerOverwhelming
	import TargetChecker
	import Unit2
	
	int TWIST_ID = 'A04R'
	real BASE_RANGE = 250.0
	real RANGE_BUFFED_P_LEVEL = 100.0
	real DMG_P_LEVEL = 150.0
	TargetChecker TARGETS 
	
	init
		CreateTrigger()
			..registerAnyUnitEvent(EVENT_PLAYER_UNIT_SPELL_EFFECT)
			..addAction(function actions)
			..addCondition(Condition(function conditions))
		TARGETS = new TargetChecker()
			..addRestriction(Restrictions.Ally)
			..addRestriction(Restrictions.Structure)
		

	function conditions() returns bool
		return GetSpellAbilityId() == TWIST_ID

	function actions()
		unit caster = GetTriggerUnit()
		vec2 pos = GetSpellTargetLoc().asVec2(true)
		real r = getRange(caster)
		group targets = CreateGroup()
		targets.enumUnitsInRange(pos, r)
		for unit u2 in targets
			if TARGETS.checkRestriction(caster, u2).result
				caster.damageTargetSpell(u2, getDamage(caster))
	
	function getRange(unit caster) returns real
		real r = BASE_RANGE
		if( caster.hasAbility(POWER_BUFF) )
			int level = caster.getAbilityLevel(POWER_AB)
			r += RANGE_BUFFED_P_LEVEL * level
		return r
		
	function getDamage(unit caster) returns real
		return DMG_P_LEVEL * caster.getAbilityLevel(TWIST_ID)